plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "Parchment"
		url = 'https://maven.parchmentmc.org'
	}
	maven {
		name = "Porting Lib"
		url = "https://mvn.devos.one/snapshots/"
	}
	maven {
		name = "CCA"
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven { url "https://jitpack.io/" }
	maven { url "https://maven.jamieswhiteshirt.com/libs-release" }
	maven { url 'https://maven.blamejared.com' }
	maven { url "https://maven.shedaniel.me" }
	maven { url "https://maven.terraformersmc.com" }
	maven { url "https://cursemaven.com" }
	maven { url "https://maven.bai.lol" }
	maven { url 'https://maven.kosmx.dev/' }
	maven { url 'https://libs.azuredoom.com:4443/mods' }
	mavenLocal()
}

dependencies {
	// Base
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	// Zenith
	modImplementation "maven.modrinth:zenith-attributes:${project.zenith_attributes_version}"
	modImplementation "maven.modrinth:zenith:${project.zenith_version}"
	modImplementation "maven.modrinth:fakerlib:${project.fakerlib_version}"
	// RPG Series
	modImplementation("maven.modrinth:projectile-damage-attribute:${project.projectile_damage}-fabric")
	modImplementation("maven.modrinth:spell-power:${project.spell_power_version}-fabric")
	modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}-fabric")
	modImplementation("maven.modrinth:wizards:${project.wizards_version}-fabric")
	modImplementation("maven.modrinth:paladins-and-priests:${project.paladins_version}-fabric")
	modImplementation("maven.modrinth:runes:${project.runes_version}-fabric")

	modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim_version}")
	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")
	modImplementation("dev.emi:trinkets:${project.trinkets_version}")
	// I want to die
	implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.0-beta.10"))
	implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:0.0.2"))
	modImplementation("com.jamieswhiteshirt:reach-entity-attributes:${project.rea_version}")
	modImplementation("maven.modrinth:AdditionalEntityAttributes:${project.aea_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:loot:2.1.1102+1.20-entity-refactor") //doubt
	modImplementation("io.github.fabricators_of_create.Porting-Lib:accessors:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:attributes:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:base:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:client_events:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:common:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:core:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:entity:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:extensions:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:lazy_registration:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:mixin_extensions:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:models:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:registries:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:tags:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:tool_actions:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:transfer:${project.port_lib_version}")
	modImplementation("io.github.fabricators_of_create.Porting-Lib:utility:${project.port_lib_version}")
	modImplementation "curse.maven:jade-324717:${jade_id}"
	modImplementation("com.github.Chocohead:Fabric-ASM:${project.fabric_asm_version}")
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
	modImplementation("io.github.ladysnake:PlayerAbilityLib:${project.pal_version}")
	implementation("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}")
	modImplementation("mod.azure.azurelibarmor:azurelibarmor-fabric-${project.azure_mc_version}:${project.azure_lib_version}")

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}